<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN""http://www.w3.org/TR/html4/loose.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<title>PaperPass 最权威中文论文抄袭检测系统</title>
<style type="text/css">
<!--
user_icon {
color: #FFFFFF;
}
html
{
overflow-x:hidden;
overflow-y:auto;
}
body,td,th {
font-family: "微软雅黑";
font-size: 12px;
}
h1,h2,h3,h4,h5,h6 {
font-family: "宋体";
}
p{
margin-bottom:10px;
}
demo_padding {
line-height: 30px;
}
.zhengwen {
padding-right: 15px;
padding-left: 5px;
padding-bottom:100px;
font-size: 13px;
line-height: 20px;
color: #666666;
}
.zhengwencenter {
padding-right: 15px;
padding-left: 0px;
margin-bottom:10px;
font-size: 13px;
line-height: 20px;
color: #666666;
text-align:center
}
.neikuang {
background-color: #EBEBEB;
border: 1px solid #999999;
padding-right: 10px;
padding-left: 10px;
margin-top:10px;
margin-left:25px;
width:300px;
}
.shubu{
height: 20px;
width: 20px;
margin-left:25px;
background-color: #FFFFFF;
border: 1px solid #999999;
text-align: center;
vertical-align: middle;
display: block;
color: #666666;
}
a.red:link {color:#FF0000}
a.red:visited {color:#FF0000}
a.red:hover {color:#000000}
a.red:active {color:#000000}

a.orange:link {color:#FF6600}
a.orange:visited {color:#FF6600}
a.orange:hover {color:#000000}
a.orange:active {color:#000000}

a.dark:link {color:#666666}
a.dark:visited {color:#666666}
a.dark:hover {color:#000000}
a.dark:active {color:#000000}

a.pagelink:hover {color:#000000}
a.pagelink:active {color:#000000}

.green{color:#008000}
.gray{color:#666666}
.red{color:#FF0000}
.orange{color:#FF6600}
a{TEXT-DECORATION:none}

-->
</style>
</head>
<body>

<div class="zhengwen">
<div>
<span style="margin-left:25px"></span>
[
<a class="pagelink" href="paper_1.htm">首页</a>
<a class="pagelink" href="#">上一页</a>
<a class="pagelink" href="paper_2.htm">下一页</a>
<a class="pagelink" href="paper_8.htm">尾页</a>
页码：1/8页
]
</div>

<br><div style="margin-left:25px">

<img src="../../images/guanwang.gif"></div><br><br>
<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">1</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/0.htm' target='right' class='orange' >多核芯片的温敏低功耗调度研究</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">2</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>摘要</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">3</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>当前，面向复杂应用的高性能片上系统为了规避和减轻功耗墙问题，延续摩尔定律，采用了实时温度功耗管理与多核并行计算结构两种主要的技术手段。</span><span class='green'>实时功耗温度管理(DPTM)通过对任务的准确预测与合理调度，可以有效地降低片上系统的运行能耗与峰值温度。</span><span class='green'>为了获得更好的实时功耗温度管理调度效果，基于精确任务负载预测模块，本文在第一部分提出了一种新颖的任务调度算法 VP- TALk，</span><span class='green'>并结合已有的多种流行调度算法，构建了一个完整的实时功耗温度管理原型系统。</span><span class='green'>本文首先分析并总结已有的三种较为流行的实时系统调度算法。</span><span class='green'>在此基础上，提出VP-TALk算法。</span><span class='green'>该算法通过计算出最优电压-频率对的理想值，进而选择出两组与理想值相邻的电压-频率对，获得两个现实的工作状态。</span><span class='green'>VP-TALk算法将任务负载分配到这两个工作状态，考虑核心温度和任务实时性的条件，以获得最优的实时功耗温度管理效果。</span><span class='green'>最后基于简单地机器学习方法，我们综合四种源算法、构建了一套完整的实时功耗温度管理原型系统。</span><span class='green'>实验结果表明：</span><span class='green'>当本文系统的任务预测组合模块能达到平均误差为2.89%的情况下，在相同的设定峰值温度约束下，</span><span class='green'>与已有调度算法的能耗值相比，尽管假设了更为敏感的功率-温度影响关系，但对于较高的工作负载率，</span><span class='green'>本文所提出的 VP- TALk调度算法仍能够获得平均14.33%的能耗降低；</span><span class='green'>本文所提出实时功耗温度管理原型系统可以获得接近于理想的能耗优化效果。</span><span class='green'>多核片上系统(MPSoC)的低功耗设计与实时功耗温度管理(DPTM)是目前较为热点的研究问题。</span><a href='../sentence_detail/17.htm' target='right' class='red' >本文采用了一种自下而上的建模方法，对MPSoC结构级热分析方法进行了研究，提出了三种具有不同算法复杂度与精度的热分析方法：</a><a href='../sentence_detail/18.htm' target='right' class='red' >模块级方法BlockTAM、核级方法CoreTAM、考虑本核内模块相互影响的改良核级方法BlockInsideCoreTAM。</a><a href='../sentence_detail/19.htm' target='right' class='red' >这三种算法均具有简单、高效、与现有简化模型兼容、易于扩展、能够解决温度对漏电流的影响等优点。</a><span class='green'>实验数据表明：</span><a href='../sentence_detail/21.htm' target='right' class='orange' >对核数较多 MPSoC进行热分析的时候， CoreTAM算法的复杂度低但精度也低，</a><span class='green'>BlockTAM算法的精度高但复杂度也高，而 BlockInsideCoreTAM则具有算法复杂度低和精度高的优点，</span><a href='../sentence_detail/23.htm' target='right' class='red' >其中局部热点的温度增量平均误差可以控制在4%以下，热分析的速度实现了近50倍以上的分析加速，</a><a href='../sentence_detail/24.htm' target='right' class='red' >两者均是较为理想的结构级热分析方法;</a><span class='green'>I采用BlockInsideCoreTAM等增量式的热分析建模方法，可以快速进行用于降低热点温度的MPSOC布图规划过程。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">4</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>关键词：</span><span class='green'>实时功耗管理；</span><span class='green'>实时温度管理；</span><span class='green'>任务调度；</span><span class='green'>热分析；</span><span class='green'>多核片上系统；</span><span class='green'>体系结构级分析</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">5</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>On Temperature and Power Management for MPSoC</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">6</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>ABSTRACT</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">7</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>To tackle the Power Wall problem on high performance chip processors oriented for heavyloadapplications and continue Moore’ s Rule， Dynamic Power and Temperature Management(</span><span class='green'>DPTM) and Multi- chip Processor Architecture are adopted in the field of Integrated Circuits( IC) design. Optimal DPTM methods can e</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">8</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>ectively cut down the soaring power consumption and alleviatethe problem of chip temperature.</span><span class='green'>In order to get better scheduling results， this paper mainlyaccomplish three things.</span><span class='green'>First， with principles derived from analyzing three previous methods asthumb rules， we obtain an improved DPTM algorithm， named VP-TALk， that carefully schedulethe processor’s running and dormant behaviors.</span><span class='green'>Besides， we propose a combined predicting model.It may predict the workload on the chip so as to draw out optimal but unpractical frequency(F) and voltage (V).</span><span class='green'>This F & V pair decides two distinct pairs of F & V， with which VP-TALKschedules the processor according to both the core temperature and remaindering work load.</span><span class='green'>Finally，combining the workload prediction method and four DPTM algorithms， we further build aDPTM control system.</span><span class='green'>Even though our model assume a tighter and more sensitive relationshipbetween energy and temperature， experiments show that:</span><span class='green'>1) the workload prediction’s error is asless as 2.89%;</span><span class='green'>2) under even more tough assumptions about thermal and power interrelation andthe same peak temperature ceiling value， our proposed DPTM algorithm gains averagely14.</span><span class='green'>33% energy saving comparing to previous algorithms when the workload ratio is comparatively high;</span><span class='green'>3) comprehensive DPTM control system’s managing e</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">9</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>ect is near to the most ideal one.E</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">10</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>cient thermal analysis plays a key role in the temperature-aware floorplan design forMulti-Processor System-on-Chip (MPSoC) and DPTM.</span><span class='green'>This paper adopts bottom-up modelingmethod to study architecture-level MPSoC thermal analysis method.</span><span class='green'>First extract relative thermalresistance between functional modules with HotSpot software， then， based on these parameters，we propose three analysis methods with di</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">11</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>erent accuracy and algorithm complexity:</span><span class='green'>Block-levelTemperature Analysis Method (BlockTAM)， Core-level Temperature Analysis Method (Core-IIITAM) and Block Inside Core Temperature Analysis Method (BlockInsideCoreTAM).</span><span class='green'>Experimentshows that BlockTAM and BlockInsideCoreTAM substantially reduce the time for MPSoC thermalanalysis with guarantee of accuracy:</span><span class='green'>speedup as high as 100 times is achieved with averagetemperature delta error as low as 3%.</span><span class='green'>Both are ideal system-level analysis method.</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">12</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>KEY WORDS:</span><span class='green'>Dynamic Power Management， Dynamic Temperature Management， TaskScheduling， Thermal Analysis， MPSoC， Architecture Level</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">13</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>研究前言1.1研究背景与相关科学问题当前，面向复杂应用的高性能片上系统为了规避和减轻功耗墙（ Power Wall）问题[1]，</span><a href='../sentence_detail/60.htm' target='right' class='orange' >延续摩尔定律[2]，采用了两种主要的技术手段。</a><span class='green'>首先，必须在芯片运行中，通过合理任务调度来降低芯片的运行能耗和峰值工作温度。</span><span class='green'>因此，对芯片进行实时功耗温度管理(DPTM)的算法研究就具有重要的理论意义与广阔的应用前景，是目前电子设计自动化(EDA)研究的一个热点问题。</span><a href='../sentence_detail/63.htm' target='right' class='orange' >最初为了降低芯片运行功耗、延长设备电池的使用寿命，研究人员提出了运用动态电压调节技术（</a><span class='green'>DVS）对系统动态功耗进行实时功耗管理（ DPM）[3–6]。</span><a href='../sentence_detail/65.htm' target='right' class='orange' >然而，随着 IC进入纳米工艺，漏电流静态功耗已经超过动态功耗，成为芯片功耗的主要来源，</a><span class='green'>而且漏电流和工作温度之间存在指数关系[7–9]，如对于65 nm工艺，</span><a href='../sentence_detail/67.htm' target='right' class='orange' >当温度从60摄氏度增加到80摄氏度，芯片漏电流会增加21%。</a><a href='../sentence_detail/68.htm' target='right' class='orange' >其次，目前IC业界已经普遍采用多核并行计算结构来提升芯片性能（通量）、降低设计复杂度。</a><span class='green'>采用多核并行计算架构的多核片上系统(MPSoC)带来了热点分散的问题，即每个核都会产生一个局部热点[10]。</span><a href='../sentence_detail/70.htm' target='right' class='orange' >为了将 MPSoC多个热点的温度控制在一个安全阈值内，必须在设计与运行阶段，以功能模块与处理器核为单位，</a><a href='../sentence_detail/71.htm' target='right' class='red' >对芯片的功耗分布[11–13]与任务调度[14–16]进行优化，为此需要在结构级对芯片进行快速准确的热分析[13，</a><span class='green'>14，17]。</span><span class='green'>鉴于纳米工艺CMOS器件的漏电流随着工作温度的升高而指数增加，漏电流功耗与温度之间存在直接的依赖关系，即电热耦合效应[14]。</span><span class='green'>为了提高分析的精度，必须在结构级热分析方法研究中考虑电热耦合效应[14–16，18]。</span><span class='green'>1.2 目前已有研究成果及其缺陷针对任务调度领域，研究人员开始针对微处理器和大型服务器系统进行实时温度管理（DTM）[19–21]。</span><span class='green'>为了对片上系统进行功耗、温度的统一调度与管理，最近开始出现了实时功耗温度管理( DPTM)的研究报道[22–25]，</span><span class='green'>在考虑漏电流、温度相互作用关系和实时任务的时间限制这两个前提下，采用不同的 DPTM策略来达到最小化运行能耗的目的。</span><span class='green'>在DPTM研究中，为了提高DPTM系统的降温降耗效果，必须对系统的任务负载进行精确的预测，事实上，任务负载的轻重决定了不同方法的DPTM效果。</span><a href='../sentence_detail/79.htm' target='right' class='orange' >对于多核芯片的11 研究前言热分析，受惠于电热分析的相似性，可以采用有限差分方法(PDF)可以进行全芯片三维热分析，获得温度分布的精确解[26]；</a><a href='../sentence_detail/80.htm' target='right' class='red' >为了考虑温度对功耗的影响，可以采用迭代方法来逼近最后的精确解[27]。</a><span class='green'>基于PDF求解的HotSpot是目前广泛采用的热分析工具软件，能够用于MPSoC的结构级热分析，也能够对电热耦合效应进行求解[27]。</span><a href='../sentence_detail/82.htm' target='right' class='orange' >尽管 PDF方法可以获得高精度的求解方案，但这类方法的算法复杂度非常高，不满足 MPSoC布图规划和实时功耗温度管理对结构级快速求解的需求[13，</a><span class='green'>17]。</span><span class='green'>为了对结构级设计的温度分布进行快速求解，出现过多种加速算法[10，11，14，15，17，18]。</span><a href='../sentence_detail/85.htm' target='right' class='orange' >文献[11]采用最简单的物理距离模型，速度速度最快、精度最差，无法进行精确的MPSoC温度求解。</a><a href='../sentence_detail/86.htm' target='right' class='orange' >文献[10，14，15]省略了核间的侧向热阻、来简化温度求解，其优点是速度快，缺点是降低了求解的精度。</a><a href='../sentence_detail/87.htm' target='right' class='orange' >文献[28]采用基于学习的自回归算法进行在线温度分析，提高热分析速度的同时、也降低了求解的精度。</a><a href='../sentence_detail/88.htm' target='right' class='red' >总之，求解加速的代价是降低了求解的精度。</a><span class='green'>为了考虑温度对功耗的影响（LDT），精确的求解算法必须采用迭代的方法进行逼近求解[13]。</span><span class='green'>在现有结构级热分析算法中，为了提高求解速度，文献[10]没有考虑 LDT，</span><a href='../sentence_detail/91.htm' target='right' class='orange' >文献[15]采用线性模型来拟合 LDT，文献[14，16]采用分段拟合系数矩阵来求解 LDP效应，</a><a href='../sentence_detail/92.htm' target='right' class='orange' >其结果会带来求解精度不同程度的降低。</a><span class='green'>1.3本文内容及其贡献为了弥补上文指出的已有研究的不足之处，本文对温度敏感的实时功耗调度和多核芯片的热分析方法这两个不同领域，</span><a href='../sentence_detail/94.htm' target='right' class='red' >分别做了较为深入的研究，并取得了如下成果。</a><span class='green'>首先，为了构建一个高效的 DPTM系统，本文不仅提出了一种具有高精度的组合式任务预测方法，</span><a href='../sentence_detail/96.htm' target='right' class='orange' >而且还提出一种新的 DPTM任务调度算法 VP- TALk，并进一步集成了一个基于负载预测的 DPTM原型系统，</a><a href='../sentence_detail/97.htm' target='right' class='orange' >该系统主要包括工作负载预测、任务实时调度两大模块。</a><a href='../sentence_detail/98.htm' target='right' class='orange' >(1)基于组合任务预测方法的负载预测模块：</a><span class='green'>根据频率范围，先将对应于复杂应用的任务分为随机/周期/趋势三种组分，</span><span class='green'>然后采用灰色模型/傅里叶模型/ RBF神经网络模型分别对这三种组分进行精确分析，</span><a href='../sentence_detail/101.htm' target='right' class='orange' >最后将三部分预测结果合成为复杂任务的预测值。</a><a href='../sentence_detail/102.htm' target='right' class='orange' >(2)基于多种调度算法的实时调度模块：</a><span class='green'>先根据对工作负载率的精确预测值、计算出最优工作状态的电压/频率理想值，再从系统的电压/频率对的实际设定值中选取相邻的两个工作状态，</span><span class='green'>最后考虑系统实时性、温度上限限制、静态功耗与温度的敏感关系以及芯片模式切换代价等多种因素，利用机器学习的方法，</span><span class='green'>选择一种最优的调度策略。</span><span class='green'>大量的模拟实验表明，(1)在负载预测方面，本文实时功耗温度管理系统所采用的组合任务预测方法胜过众多的相关模型及算法，平均误差仅为2.89%；</span><span class='green'>(2)在节能效果方21研究前言面，当负载率高于55%时，基于相同的峰值温度约束，</span><span class='green'>本文所提出的 VP- TALk算法分别比 Pattern- based、 M- oscillating和 TALk对比算法节能约20.5%、11.0%、11.5%；</span><span class='green'>(3)本文实时功耗温度管理原型系统的调度效果接近于理想调度效果。</span><span class='green'>其次，本文采用自下而上的策略，使用HotSpot提取MPSoC功能模块之间的热相关系数，建立了模块级热分析方法BloTAM；</span><a href='../sentence_detail/111.htm' target='right' class='orange' >如图2所示，每个核内只产生一个热点，我们可以仅依靠热点之间的热相关系数、建立一个算法复杂度非常低的核级热分析方法CoreTAM；</a><a href='../sentence_detail/112.htm' target='right' class='orange' >为了提高CoreTAM的精度，我们进一步提出了考虑本核内模块相互影响的改良核级方法BlockInsideCoreTAM。</a><a href='../sentence_detail/113.htm' target='right' class='orange' >与现有的结构级热分析算法相比，本文所提出的三种方法具有简单、高效、与现有简化模型兼容、易于扩展、考虑 LDT影响等优点，</a><a href='../sentence_detail/114.htm' target='right' class='red' >可以满足温敏 MPSoC设计对高效、精确的结构级热分析方法的需求。</a><a href='../sentence_detail/115.htm' target='right' class='red' >与HotSpot软件的实验结果相比，本文方法的实验数据表明：</a><span class='green'>(1)热分析精度方面而言，对多核心 MPSoC进行局部热点温度分析的结果表明，</span><span class='green'>BlockTAM和 BlockInsideCoreTAM仅产生4%以下的温度增量平均误差(2)热分析速度方面而言，</span><span class='green'>在对具有16核心的 CPU进行温敏布图规划的热分析过程中， BlockTAM和 BlockInsideCoreTAM可以提供50倍左右的计算加速，</span><span class='green'>10倍以上的运算加速效果1.4文章结构安排文章结构安排如下：</span><span class='green'>第二章介绍基于高精度组合式任务预测方法的DPTM原型系统，调度对象仅限于单一处理器。</span><span class='green'>第四章给出大量模拟实验数据，以证实该调度系统在降低功耗和温敏控制上的优越性。</span><span class='green'>第四章将研究对象扩展为多核处理器，提出三种结构级热分析方法。</span><span class='green'>为衡量这三种热分析计算模型的精确度与加速效果，第五章中设计了若干实验测例，并给出了模拟热分析结果。</span><a href='../sentence_detail/124.htm' target='right' class='red' >最后一章对全文作出总结。</a>
</p>
</div>


<div>
<span style="margin-left:25px"></span>
[
<a class="pagelink" href="paper_1.htm">首页</a>
<a class="pagelink" href="#">上一页</a>
<a class="pagelink" href="paper_2.htm">下一页</a>
<a class="pagelink" href="paper_8.htm">尾页</a>
页码：1/8页
]
</div>

</div>

<div class="zhengwencenter">
<p>
检测报告由<a href="http://www.paperpass.com/" target="_blank">PaperPass</a>文献相似度检测系统生成
</p>
<p>
Copyright © 2007-2013 PaperPass
</p>
</div>
<div style="margin-bottom:400px"></div>
</body>
</html>
