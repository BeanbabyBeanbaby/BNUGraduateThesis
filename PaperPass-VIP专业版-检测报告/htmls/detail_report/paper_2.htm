<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN""http://www.w3.org/TR/html4/loose.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<title>PaperPass 最权威中文论文抄袭检测系统</title>
<style type="text/css">
<!--
user_icon {
color: #FFFFFF;
}
html
{
overflow-x:hidden;
overflow-y:auto;
}
body,td,th {
font-family: "微软雅黑";
font-size: 12px;
}
h1,h2,h3,h4,h5,h6 {
font-family: "宋体";
}
p{
margin-bottom:10px;
}
demo_padding {
line-height: 30px;
}
.zhengwen {
padding-right: 15px;
padding-left: 5px;
padding-bottom:100px;
font-size: 13px;
line-height: 20px;
color: #666666;
}
.zhengwencenter {
padding-right: 15px;
padding-left: 0px;
margin-bottom:10px;
font-size: 13px;
line-height: 20px;
color: #666666;
text-align:center
}
.neikuang {
background-color: #EBEBEB;
border: 1px solid #999999;
padding-right: 10px;
padding-left: 10px;
margin-top:10px;
margin-left:25px;
width:300px;
}
.shubu{
height: 20px;
width: 20px;
margin-left:25px;
background-color: #FFFFFF;
border: 1px solid #999999;
text-align: center;
vertical-align: middle;
display: block;
color: #666666;
}
a.red:link {color:#FF0000}
a.red:visited {color:#FF0000}
a.red:hover {color:#000000}
a.red:active {color:#000000}

a.orange:link {color:#FF6600}
a.orange:visited {color:#FF6600}
a.orange:hover {color:#000000}
a.orange:active {color:#000000}

a.dark:link {color:#666666}
a.dark:visited {color:#666666}
a.dark:hover {color:#000000}
a.dark:active {color:#000000}

a.pagelink:hover {color:#000000}
a.pagelink:active {color:#000000}

.green{color:#008000}
.gray{color:#666666}
.red{color:#FF0000}
.orange{color:#FF6600}
a{TEXT-DECORATION:none}

-->
</style>
</head>
<body>

<div class="zhengwen">
<div>
<span style="margin-left:25px"></span>
[
<a class="pagelink" href="paper_1.htm">首页</a>
<a class="pagelink" href="paper_1.htm">上一页</a>
<a class="pagelink" href="paper_3.htm">下一页</a>
<a class="pagelink" href="paper_8.htm">尾页</a>
页码：2/8页
]
</div>

<br><div style="margin-left:25px">

<img src="../../images/guanwang.gif"></div><br><br>
<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">14</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>基于任务精确预测的实时功耗温度管理2.1 实时系统的工作负载模型本文讨论的实时系统的工作负载模型具有简单地结构。</span><span class='green'>系统会周期性地分配一段时间D，某一任务的必须在该截止时间以前完成。</span><a href='../sentence_detail/127.htm' target='right' class='orange' >该任务在最坏情况下所需要的执行时间为W。</a><a href='../sentence_detail/128.htm' target='right' class='orange' >本文中假设任务的截止时间等于系统周期性分配的时间片，并且等价地只考虑一个周期内任务的执行情况。</a><span class='green'>根据任务的性质，[29]与[30]等文献研究了如何估计(D;</span><span class='green'>W)数据对的值。</span><span class='green'>本文中我们认为工作负荷是发送至实时系统的网络流量的归一化形式。</span><span class='green'>2.2实时系统的热分析模型为了研究处理器内核( Die)的热传导特性，文献[4，30，31]等都广泛采用了等效 RC电路方法进行热分析，</span><span class='green'>并采用式2-1进行内核工作温度的分析 dTdt= PCth?</span><span class='green'>T ?</span><span class='green'>TambRthCth=</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">15</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>P ?</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">16</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>(T ?</span><span class='green'>Tamb) (2-1)式2-1中T和Tamb分别代表芯片的温度与环境温度， P代表芯片在时刻t的功耗，Rth与Cth分别为等效热阻与等效热容。</span><span class='green'>2.3 实时系统的功耗分析模型多数处理器拥有两种主要模式，即工作状态和休眠状态：</span><span class='green'>只有在工作状态下处理器被充足供电，并执行计算任务；</span><a href='../sentence_detail/141.htm' target='right' class='orange' >否则，处理器将进入休眠状态以减少功耗，同时降低自身温度。</a><span class='green'>工作状态下的功耗为：</span><span class='green'>Pactive = CV2dd f + NgateIleakageVdd (2-2)式2-2中的第一项代表动态功耗，第二项代表静态功耗。</span><span class='green'>当给定供电电压Vdd后，工作频率f为f =(Vdd ?</span><span class='green'>Vt)</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">17</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>(VddTmax)</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">18</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>× 4:</span><span class='green'>2824 × 1014 ≈ C1Vdd (2-3)42 基于任务精确预测的实时功耗温度管理表2.1 A;</span><span class='green'>B;</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">19</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>;</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">20</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>的取值参数A B</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">21</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>取值1.143 E-121.013 E-14466.403-1224.7416.2826.9091.191.20由于与工作电压成正比，</span><span class='green'>我们可以使用式2-4计算动态功耗 Pactive= C2 V3 dd(2-4)通过 HSPICE软件进行的曲线拟合，</span><span class='green'>与温度、电压相关的漏电流可写为 Ileakage= I( V0;</span><span class='green'>T0)(AT2 exp(</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">22</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>Vdd +</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">23</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>T) + B exp(Vdd +</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">24</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>)) (2-5)式2-5中A;</span><span class='green'>B;</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">25</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>;</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">26</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/161.htm' target='right' class='orange' >是经验参数，由芯片的生产工艺参数所决定。</a><span class='green'>本文的模拟实验默认选择采用65nm的工艺参数，具体参数数值见表2.1。</span><span class='green'>当工作温度T在300K到380K的正常范围变化时，exp( 1T )的波动变化很小。</span><span class='green'>当给定了Vdd后，文献[23]通过引入两个参考温度TH和T L进一步将漏电流简化为温度的二次函数。</span><span class='green'>于是，与漏电流相关的静态功耗可以用式2-6计算Pleakage = Ngate( ?</span><span class='green'>AT2 + ?</span><span class='green'>B)Vdd (2-6)2-6中， ?</span><span class='green'>A =Ileakage(TH;</span><span class='green'>Vdd)?</span><span class='green'>Ileakage(T L;</span><span class='green'>Vdd)TH2?</span><span class='green'>T L2 ， ?</span><span class='green'>B = Ileakage(TH;</span><span class='green'>Vdd) ?</span><span class='green'>A?</span><span class='green'>T L2。</span><span class='green'>此外，处理器在两种工作状态之间的切换是通过改变工作电压来实现的，状态切换将带来额外的开销，包括能耗开销pr与延时开销cr[24]。</span><span class='green'>整体而言，工作状态切换跨度越大（切换电压差越大），其能耗和时间的开销也就越大。</span><span class='green'>2.4目前流行的动态温度与功耗调度策略2.4.1考虑漏电流的温度敏感技术（简称 TALk技术） Gang Qu[22，</span><span class='green'>32]提出的考虑漏电流的温度敏感技术技术根据工作负载和截止时间的不同，来控制不同时间段处理器的工作/休息状态：</span><span class='green'>当负载量大并且温度较低时、处理器处于激活工作状态；</span><span class='green'>当负载量小并且温度较高时，处理器切换到睡眼状态以减小能耗，以降低温度。</span><span class='green'>具体而言，该算法会实时监测两个重要的调度指标。</span><a href='../sentence_detail/184.htm' target='right' class='orange' >其一是当前工作负载量和剩余空闲时间的比例</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">27</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>，其二是将芯片调至睡眠状态下的温度下降速率与将芯片调至工作状态下的温度上升速率的比例</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">28</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/186.htm' target='right' class='red' >如果前者大于后者处理器说明任务较重，休息状态降温效率不高，于是处理器执行任务，</a><a href='../sentence_detail/187.htm' target='right' class='orange' >而如果前者小于后者说明任务较轻，休息状态降温效52基于任务精确预测的实时功耗温度管理率高，</a><a href='../sentence_detail/188.htm' target='right' class='red' >便将处理器就处于休息状态以实现降温。</a><span class='green'>其中</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">29</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>比较直观且容易计算，而</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">30</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>则较为复杂。</span><span class='green'>首先，要计算处理器当前的工作温度Tcurrent，而后要分别计算该芯片在工作和睡眠状态下的稳定温度K1;</span><span class='green'>K2（即经过了无穷长时间后的温度），最后用式2-7计算得到速率比值。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">31</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>=Tcurrent ?</span><span class='green'>K2K1 ?</span><span class='green'>Tcurrent(2-7)2.4.2 基于固定周期的技术（简称Pattern-Based，PB技术）基于固定周期的算法将任务的截止时间或者运行周期D等分为n个时间片段，每段长</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">32</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>= D=n，采用PB算法的处理器将工作于特定规则的模式中[23，32]：</span><span class='green'>执行</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">33</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>= D=n时间后便切入休眠模式，以减少功耗并降低温度。</span><span class='green'>文献[23]与[31]证明：</span><span class='green'>如果重复这种运行模式足够多次，处理器将达到温度的平衡值，并进入稳定状态，即每个周期的初始温度和结束温度将趋向于稳定值，以便于分析。</span><span class='green'>2.4.3 M阶震荡调节技术（简称 M- Oscillating， MO技术）上面介绍的</span><span class='green'>TALk算法和 PB算法都要求处理器的工作速度要大于或者等于负载率 W= D。</span><span class='green'>具有DVS或者DVFS功能的实时性系统往往只允许芯片可以工作在几个电压档上，并可以根据负载率调节实际处于的电压值。</span><span class='green'>这就会导致芯片一直工作在高于需求的速度上。</span><span class='green'>这不仅增加了动态功耗和静态功耗，因为他们分别是电压的三次方和一次方函数，还会加速温度的上升，提高平衡温度的值，最终导致漏电流以二次方的速度增长。</span><span class='green'>一种显而易见的解决方法是允许处理器在两个不同速度下工作。</span><span class='green'>文献[30]证明，如果采用两个最接近的速度完成分配给处理器的任务，那么相对于采用其他的工作速度组合，处于该速度组下处理器的温度是最优的。</span><span class='green'>如果进一步地将这种两步策略应用在 m个时间片中[32]，不仅温度可以进一步优化，还可以将 D时间内的总功耗表达为 m的函数，</span><a href='../sentence_detail/210.htm' target='right' class='orange' >而且必然存在能耗最小化的 m值[25]。</a><a href='../sentence_detail/211.htm' target='right' class='orange' >由于要考虑电压切换所付出的时间开销和能耗开销，[25]给出了m所具有确定的上限值Ceil。</a><span class='green'>2.4.4 小结与评价作为温敏调度算法，TALk参照剩余任务量与当前温度、来合理地调度任务。</span><span class='green'>然而，简单的开关模式无法利用DVS技术，只能工作在固定速度。</span><a href='../sentence_detail/214.htm' target='right' class='orange' >而且状态切换所导致的时间、能耗开销也是不可避免的。</a><span class='green'>根据切换时间和能耗开销[24]，从全速工作转变为零电压将产生最大的能耗和时间开销。</span><span class='green'>62 基于任务精确预测的实时功耗温度管理无论采用TALk还是PB算法，都要求处理器工作在大于W=D的速度上。</span><span class='green'>大多数具有DVS或DVFS功能的实时系统通常只允许芯片的电压为若干离散值，根据负载率来调整电压工作档。</span><span class='green'>这往往会导致芯片实际上工作高于任务所需的速度，不仅增加了近似与电压三次方成正比的动态功耗和与电压近似成正比的静态功耗，</span><span class='green'>而且加速了温度的攀升，抬高了平衡态时的温度，进一步导致漏电流近似平方速度的增长。</span><span class='green'>G.Quan等[25]提出的MO算法存在两个主要缺陷。</span><span class='green'>首先，假设功率为温度的线性函数，使得峰值温度较PB有很大降低。</span><span class='green'>其次是在实际应用中不能忽略低工作负载率情况：</span><span class='green'>当W=D小于处理器支持的最低工作速度时，MO只能退化为PB，以防止不必要的功耗增加。</span><span class='green'>72 基于任务精确预测的实时功耗温度管理2.5 基于电压预测的温敏漏电流技术（简称VP-TALk技术）Compute OptimalSpeed:</span><span class='green'>SconScon(= LS Select(0， LS) Fix Mat1 Original TALKSelect( S1，</span><span class='green'>S2) Set M atFloorExecutive Time forS1& for S2 TALK SupportingDVFSM= M+1 M) CeilSelect theOptimal MENDNOYESNOYES图2.</span><span class='green'>1基于电压预测的温敏漏电流技术的流程图根据我们在 DPTM领域的研究经验，</span><span class='green'>可以获得如下关于 DPTM改进的几点经验准则：</span><a href='../sentence_detail/229.htm' target='right' class='red' >1) 必须考虑温度对静态功耗的影响。</a><a href='../sentence_detail/230.htm' target='right' class='orange' >本文将功耗定为温度的二次函数。</a><span class='green'>在温度限制下，DPTM系统最好具有温敏调控功能。</span><span class='green'>82 基于任务精确预测的实时功耗温度管理2) 如果能够准确预测负载量，确定任务所需的工作频率或者工作电压，就可以提前调度，更好的满足实时性。</span><span class='green'>3) 芯片电压选取。</span><span class='green'>由于工作电压决定了运行速度，应该采用MO的电压选取方法，即使得芯片运行速度刚好满足工作负载的需求，以最大程度地利用DVFS技术来降低能耗。</span><span class='green'>4) 调度过程中，必须考虑电压切换（状态切换）所带来的额外能耗、时间开销。</span><a href='../sentence_detail/236.htm' target='right' class='orange' >基于以上观察，我们提出一种改良后的TALk算法，即具有电压选择的TALk算法，本文称为VP-TALk，其算法流程图如图2.1所示。</a><span class='green'>与MO相似，VP-TALk首先需要假设电压可以连续调节、以获得理论上的最优工作速度S con。</span><span class='green'>在S con ≤ LS（芯片最低工作速度）时， VP-TALk等同于原始的TALk算法。</span><span class='green'>在S con ) LS时，该算法选用两档邻接的速度S 1和S 2，使得S 1 ≤ S con ( S 2。</span><span class='green'>不同于 MO的等分 M段时间段， VP- TALk采用更灵活的、电压可调的温敏 TALk来对每一小段的工作状态进行调度，</span><span class='green'>即对每一个小的时间片，采用 TALk中定义的两个调度指标（</span>
</p>
</div>


<div>
<span style="margin-left:25px"></span>
[
<a class="pagelink" href="paper_1.htm">首页</a>
<a class="pagelink" href="paper_1.htm">上一页</a>
<a class="pagelink" href="paper_3.htm">下一页</a>
<a class="pagelink" href="paper_8.htm">尾页</a>
页码：2/8页
]
</div>

</div>

<div class="zhengwencenter">
<p>
检测报告由<a href="http://www.paperpass.com/" target="_blank">PaperPass</a>文献相似度检测系统生成
</p>
<p>
Copyright © 2007-2013 PaperPass
</p>
</div>
<div style="margin-bottom:400px"></div>
</body>
</html>
