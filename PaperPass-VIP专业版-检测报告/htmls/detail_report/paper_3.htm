<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN""http://www.w3.org/TR/html4/loose.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<title>PaperPass 最权威中文论文抄袭检测系统</title>
<style type="text/css">
<!--
user_icon {
color: #FFFFFF;
}
html
{
overflow-x:hidden;
overflow-y:auto;
}
body,td,th {
font-family: "微软雅黑";
font-size: 12px;
}
h1,h2,h3,h4,h5,h6 {
font-family: "宋体";
}
p{
margin-bottom:10px;
}
demo_padding {
line-height: 30px;
}
.zhengwen {
padding-right: 15px;
padding-left: 5px;
padding-bottom:100px;
font-size: 13px;
line-height: 20px;
color: #666666;
}
.zhengwencenter {
padding-right: 15px;
padding-left: 0px;
margin-bottom:10px;
font-size: 13px;
line-height: 20px;
color: #666666;
text-align:center
}
.neikuang {
background-color: #EBEBEB;
border: 1px solid #999999;
padding-right: 10px;
padding-left: 10px;
margin-top:10px;
margin-left:25px;
width:300px;
}
.shubu{
height: 20px;
width: 20px;
margin-left:25px;
background-color: #FFFFFF;
border: 1px solid #999999;
text-align: center;
vertical-align: middle;
display: block;
color: #666666;
}
a.red:link {color:#FF0000}
a.red:visited {color:#FF0000}
a.red:hover {color:#000000}
a.red:active {color:#000000}

a.orange:link {color:#FF6600}
a.orange:visited {color:#FF6600}
a.orange:hover {color:#000000}
a.orange:active {color:#000000}

a.dark:link {color:#666666}
a.dark:visited {color:#666666}
a.dark:hover {color:#000000}
a.dark:active {color:#000000}

a.pagelink:hover {color:#000000}
a.pagelink:active {color:#000000}

.green{color:#008000}
.gray{color:#666666}
.red{color:#FF0000}
.orange{color:#FF6600}
a{TEXT-DECORATION:none}

-->
</style>
</head>
<body>

<div class="zhengwen">
<div>
<span style="margin-left:25px"></span>
[
<a class="pagelink" href="paper_1.htm">首页</a>
<a class="pagelink" href="paper_2.htm">上一页</a>
<a class="pagelink" href="paper_4.htm">下一页</a>
<a class="pagelink" href="paper_8.htm">尾页</a>
页码：3/8页
]
</div>

<br><div style="margin-left:25px">

<img src="../../images/guanwang.gif"></div><br><br>
<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">34</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>与2-7）来决定是将芯片设置为休眠或是工作状态。</span><span class='green'>由于m的数量由切换工作状态的代价和任务的实时性所限制，其上下限分别记为Ceil和Floor[25]。</span><span class='green'>VP-TALk的应用前提是假设我们已经通过某种预测的方法预测出了任务负载量，从而，在任务到达前调度就已经开始，所以认为是实时性的。</span><span class='green'>2.6动态温度与功耗管理系统2.6.1启发性示例在之前的分析中，我们已经指出，</span><span class='green'>较轻工作负载时的 MO必然要退化至 PB的方法.这是因为当工作所需电压低于可选的最小电压值时，</span><span class='green'>MO中阶梯型工作电压策略无法通过逼近最优工作电压的方式节省动态功耗。</span><span class='green'>为了探究工作量与最优调度算法之间的关系，我们设定任务长度为10秒，并考虑比文献[25]更强的温度对漏电流影响，</span><span class='green'>我们在工作负载率全区间（5%-95%）范围内，对 TALk、 PB与 MO这3种已有调度源算法的调度效果进行了考察。</span><span class='green'>图2.2给出了能耗的数据，图2.3给出了温度数据。</span><span class='green'>我们可以得出如下结论：</span><span class='green'>1)当工作负载率（ W= D）低于50%（近似值）时，三种源算法的峰值温度低于310 K（37° C），</span><a href='../sentence_detail/253.htm' target='right' class='orange' >峰值温度对系统的性能与可靠性没有影响；</a><span class='green'>在系统能耗方面，PB算法（也即MO算法）的调度效果要胜过TALk算法，因此，PB算法具有最佳的调度效果。</span><span class='green'>92基于任务精确预测的实时功耗温度管理图2.2各种调度算法的能耗效果随负载率变化的</span><span class='green'>比较2)当工作负载率（ W= D）处于50%－70%区段（近似值）时，</span><span class='green'>三种源算法的峰值温度低于320 K（47° C），峰值温度对系统的性能与可靠性也没有影响；</span><span class='green'>在系统能耗方面，TALk算法的调度效果要胜过PB和MO算法，因此，TALk算法具有最佳的调度效果。</span><span class='green'>3)当工作负载率（ W= D）大于70%（近似值）时，三种源算法的峰值温度高于320 K（47° C），</span><span class='green'>最高可超过380 K（107° C），峰值温度对系统的性能与可靠性具有明显影响，</span><span class='green'>其中 MO算法具有最低的峰值温度；</span><span class='green'>在系统能耗方面， MO算法的调度效果要明显胜过其它两种源算法，MO算法具有最佳的调度效果。</span><span class='green'>由此可见，最优的DPTM调度算法与工作负载率有直接关系。</span><span class='green'>我们将以此关系作为理论基础，用于DPTM调度原型系统的构建，即根据对实时系统工作负荷的精确预测结果，来选择效果最佳的调度算法，并对DPTM调度效果进行评价。</span><span class='green'>2.6.2 本文采用文献[32]中所提出的基于时间序列分析的工作负载预测模型来满足VPTALk算法预知工作负载率的需求。</span><span class='green'>具体的负载预测模型构建的公式推导和演化请参见文102基于任务精确预测的实时功耗温度管理图2.</span><span class='green'>3各种调度算法的峰值温度效果随负载率变化的比较章[32]的相关章节。</span><span class='green'>这里，主要简单介绍整个预测流程。</span><span class='green'>实时系统的任务从其本质属性来讲，可以分为三种不同的成分。</span><span class='green'>本文认为，工作负载X(t)中包含1) 趋势成分T(t)：</span><span class='green'>对应任务量随着时间而平稳增长、衰减的性质；</span><span class='green'>2) 周期成分P(t)，对应任务量随时间变化表现出的规律性；</span><a href='../sentence_detail/273.htm' target='right' class='orange' >3) 随机成分R(t)，对应任务量之中不确定的随机性。</a><span class='green'>从而可以将任务看作三者之和：</span><span class='green'>X(t) = T(t) + P(t) + R(T)。</span><span class='green'>基于对三种基本成分的分析，本文提出了基于灰色模型、傅里叶级数分解模型以及径向基函数（ RBF）人工神经网络理论的组合预测数学模型，</span><span class='green'>根据若干数量的真实的任务负载历史数据，预测片上系统下一个时间步的近似任务量。</span><span class='green'>具体而言，1) 趋势成分反映工作负载随着时间演变而增加或衰减的趋势。</span><a href='../sentence_detail/279.htm' target='right' class='orange' >灰度模型GM(1，1)模型可以通过累加原始数据数列，弱化随机扰动因素影响，发现该序列的指数增长规律；</a><a href='../sentence_detail/280.htm' target='right' class='orange' >2) 对于一个周期函数，最成熟的分析方法就是用傅里叶级数展开或者傅里叶变换；</a><span class='green'>3) 众所周知，任何服务系统的工作任务都会有一定的随机性，称之为任务负载中的随机成分。</span><a href='../sentence_detail/282.htm' target='right' class='orange' >径向基函数神经网络是通过非线性基函数的线性组合，对非线性函数关系具有良好的逼近能力，</a><a href='../sentence_detail/283.htm' target='right' class='red' >适于描述网络流量的非线性、时变性的复杂因素，</a><span class='green'>并可克服 BP神经网络训练时间长及计算复杂度高的不足基于在线评价的动态温度与功耗管理系统根据调度算法性能与工作负载大小相关的观察，</span><span class='green'>我们提出了基于工作负载预测结果来选择 DPTM调度算法的调度策略，并以此构建了本文的实时功耗温度管理原型系统，</span><span class='green'>102基于任务精确预测的实时功耗温度管理图2.3各种调度算法的峰值温度效果随负载率变化的</span><span class='green'>比较整个系统由工作负载预测、调度策略选择和调度策略评价三大模块组成。</span><span class='green'>在该系统工作中，其三大模块主要完成如下功能。</span><span class='green'>1) 工作负载预测模块：</span><span class='green'>我们根据负载变化周期的长短，提出了一种组合式的负载预测方法，采用多种不同拟合方法来分别对任务的不同物理意义成分进行精确预测，</span><a href='../sentence_detail/291.htm' target='right' class='orange' >以获得对复杂任务的精确预测；</a><span class='green'>2) 调度策略选择模块：</span><span class='green'>我们综合考虑实时完成任务、温度上限、能耗最小化、漏电流与温度相关以及芯片模式切换代价等多种因素，选用不同的任务调度策略；</span><span class='green'>3) 调度策略评价模块：</span><span class='green'>对每种策略的系统能耗与峰值温度进行评价，并将其作为实时功耗温度管理系统的反馈量，供调度策略选择模块参考。</span><span class='green'>调度策略选择的学习主要通过后期性能评价的评价值完成。</span><span class='green'>假设存在N类算法，编号为1;</span><span class='green'>2;</span><span class='green'>:</span><span class='green'>:</span><span class='green'>:</span><span class='green'>:</span><span class='green'>:</span><span class='green'>:</span><span class='green'>;</span><span class='green'>N。</span><span class='green'>它们在某一时刻t的得分或者权重为，wt = (w1t;</span><span class='green'>w2t;</span><span class='green'>:</span><span class='green'>wNt)对其中任一个权重分量wkt可以采用式2-8进行计算wkt = 1 ?</span><span class='green'>Σ?</span><span class='green'>t?</span><span class='green'>1j=t0Ek;</span><span class='green'>j</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">35</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>jNΣ?</span><span class='green'>i=1Ei;</span><span class='green'>j(2-8)112 基于任务精确预测的实时功耗温度管理式2-8中Ei;</span><span class='green'>j代表芯片使用第i类DPTM算法在时刻j的负载情况下消耗的能量，</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">36</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>j为一可调整的参数，代表时刻j的能耗情况对决策的影响程度，t0是可以变动的初始值，它的取值意味着选取从何时开始的能耗情况作为以后决策的参考。</span><span class='green'>在预测出工作负荷值后，则开始使用2-9进行决策：</span><span class='green'>DPTMt = arg( max1≤k≤N(wk;</span><span class='green'>t)) (2-9)式2-9中DPTMt为t时刻选择出的动态功耗温度调度策略。</span><span class='green'>考虑到温度上的限制，我们需要考察所选的调度源算法是否会超过温度上限。</span><span class='green'>如果能耗的节约是在很高的峰值温度的代价下换取的，我们将放弃该源算法，而选择次优的但是有较低峰值温度的调度源算法。</span><span class='green'>与三种已有源算法和本文提出的VP-TALk算法相比，本文实时功耗温度管理系统的主要扩展改进点在于：</span><span class='green'>具有高精度的任务预测模块，为根据负载量而进行的策略选择提供前提基础；</span><span class='green'>通过基于调度效果评价的机器学习，自适应地根据负载量的轻重选择调度策略。</span><span class='green'>2.6.3基于单一调度策略的动态温度与功耗管理系统值得一提的是，如果我们选定某一种调度策略，</span><span class='green'>省略机器学习模块，就构成了基于单一调度策略的实时功耗温度管理原型系统。</span><span class='green'>在该实时功耗温度管理原型系统中，输入量为任务负载的历史值，通过这些历史值，利用第六节所述的任务负载预测模型，可以得到对于下一时刻任务量的预测值。</span><span class='green'>进而，可以确定完成预测任务值所需要的芯片电压或者频率，并利用上文所述的某一种算法进行调度。</span><span class='green'>不论是基于及其学习的实时功耗温度管理系统，还是基于单一调度策略的实时功耗温度管理系统，都要求提前预知任务负载的大小。</span><a href='../sentence_detail/333.htm' target='right' class='orange' >因此，本文采用所提出的组合模型预测方法。</a><span class='green'>该方法将复杂任务按频谱长短分类为随机/周期/趋势等三种成分，</span><a href='../sentence_detail/335.htm' target='right' class='orange' >然后采用灰色模型/傅里叶模型/径向基函数（ RBF）神经网络模型对这三种成分进行组合分析，</a><span class='green'>可以得到平均相对误差低于3%、归一化方差小于0.5的任务负载预测效果[32]。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">37</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>动态温度与功耗管理系统的模拟验证3.1模拟实验环境为了验证本文所提出的预测任务负载模型、 VP- TALl调度算法以及 DPTM原型系统，</span><span class='green'>我们进行了三组模拟实验。</span><span class='green'>实验运行平台为配有Intel Core 2 Q9550 CPU、4GBRAM的Windows7 64位操作系统，预测模型以及各DPTM算法在MATLAB[33]软件中进行仿真模拟。</span><span class='green'>3.2 VP-TALk算法的动态温度与功耗管理效果验证本文通过与现有的TALk、PB、MO算法进行对比，来验证本文提出的VP-TALk算法的优越性。</span><span class='green'>实验中选取pr、cr取值分别为0.001s/V和0.01J/V2，温度最高上限设为390K，任务周期固定为10s。</span><a href='../sentence_detail/342.htm' target='right' class='orange' >支持DVFS芯片的电压值从0.6V到1.4V可调，步长0.1V。</a><span class='green'>根据电压可以得到归一化的速度序列为0.574， 0.6611， 0.7324， 0.7926， 0.8446， 0.8901， 0.930， 0.9670， 1。</span><span class='green'>任务负载率为5%至95%，变化步长为5%。</span><span class='green'>对于4种对比算法，我们分别将能耗情况（单位为焦耳J）和峰值温度情况（单位为绝对温度K）绘制于图3.1和图3.2。</span><span class='green'>133动态温度与功耗管理系统的模拟验证图3.1各种算法的能耗调度效果比较图3.</span><a href='../sentence_detail/347.htm' target='right' class='orange' >2各种算法的峰值温度调度效果比较从图3.1可以看出，</a><span class='green'>对于能耗：</span><span class='green'>当负载率小于55%时，VP-TALk优于TALk、PB与MO等价。</span><span class='green'>这是因为，在负载率不高于芯片最低运行速度（0.574）143动态温度与功耗管理系统的</span><span class='green'>模拟验证表3.1 VP- TALk算法调度效果与已有算法的比较算法 PB MO TALk Avg平均(%</span><span class='green'>)20.5411.0411.4214.33最大(%)28.8322.3421.2724.68时，</span><span class='green'>VP- TALK相当于使用 DVS技术的 TALk， PB相当于使用单一速度的 MO。</span><span class='green'>此时，TALk与PB的调度效果相差无几。</span><span class='green'>在负载率为25%到50%时，PB略优于VP-TALk算法。</span><span class='green'>原因是VP-TALk在电压和时间切换上付出了更大的代价。</span><span class='green'>然而，随着负载率的增加，当负载率大于55%时， VP- TALk的调度效果全面优于其他三种算法，</span><span class='green'>比 PB、 MO以及 TALk的平均能耗分别节省大约20.54%、11.04%、11.42%。</span><span class='green'>表3.1列出了当负载率大于55%时，能耗节省数据的统计信息，具体说明了VP-TALk的在能耗节约方面的优势。</span><span class='green'>从图3.2中可以看出，当工作负载率小于50%时，各种算法所达到的峰值温度都不超过310 K，</span><span class='green'>四种调度算法在峰值温度方面的差距基本小于1 K，并在最大负载率时近似共同终结于384 K。</span><span class='green'>3.3 基于在线评价的动态温度与功耗管理系统的效果评测为了评价本文基于机器学习的实时功耗温度管理原型系统功耗与温度的调度效果，我们做了两组实验。</span><span class='green'>首先，基于[32]中所得到的每个时刻工作负载预测值，我们分别采用四种对比源算法，即 TALk[22]、 PB[23]、 MO[25]，</span><span class='green'>VP- TALk，算出每个时刻每种算法的能耗值与峰值温度；</span><span class='green'>然后将四种对比源算法每个时刻的能耗值与峰值温度进行平均，得到四种对比源算法每个时刻的平均调度效果；</span><span class='green'>最后使用图3.3与图3.4分别比较了本文原型系统与四种对比源算法平均调度效果的能耗（单位J）和峰值温度（单位°C）。</span><span class='green'>153动态温度与功耗管理系统的模拟验证图3.3基于在线评价的动态温度与功耗管理系统 VS各种源算法均值（</span><span class='green'>能耗调度效果）图3.4基于在线评价的动态温度与功耗管理系统 VS源算法均值（</span><span class='green'>峰值温度调度效果）163动态温度与功耗管理系统的模拟验证图3.5基于在线评价的动态温度与</span><span class='green'>功耗管理系统 VS理想调度效果（能耗调度效果）图3.6基于在线评价的动态温度与</span><span class='green'>功耗管理系统 VS理想调度效果（峰值温度调度效果）其次，</span><span class='green'>同样基于[32]中所得到的每个时刻工作负载真实值，采用四种源算法，分别算出每个时刻的能耗值与峰值温度，</span><span class='green'>取其中的最优值作为实时功耗温度管理调度的理173动态温度与功耗管理系统的模拟验证想值；</span><span class='green'>然后使用这批理想值来客观评价集成了TALk、PB、MO以及VP-TALk算法的实时功耗温度管理原型系统的调度效果；</span><span class='green'>最后使用图3.5与图3.6分别比较了本文原型系统与四种对比源算法理论最优调度效果的能耗（单位J）和峰值温度（单位°C）。</span><span class='green'>从图3.3与图3.4可以直观地看出：</span><span class='green'>与四种源算法平均调度效果相比，本文原型系统择优式的组合 DPTM算法可以明显拉低实时系统的运行能耗曲线和峰值温度曲线，</span><span class='green'>这表明对比于四种 DPTM源算法，本文基于机器学习的实时功耗温度管理原型系统获得了”取其长、去其短”的优化效果。</span><span class='green'>同时从表3的比较数据可以得出”本文原型系统可以获得近似最优的调度效果”的结论，其实验依据如下：</span><span class='green'>1)与四种 DPTM源算法的平均效果相比（图3.3），本文原型系统采用的择优式组合 DPTM算法可获得更优的能耗优化效果，</span><span class='green'>所有时间采样点能耗的累加值 ETOTAL（总能耗）可获得18.39%的改进，所有时间采样点中的最大值 EMAX（最大能耗）可获得18.77%的改进。</span><span class='green'>整体改进效果非常明显。</span><span class='green'>2)与四种 DPTM源算法相比（图3.4），本文原型系统可以获得更优的峰值温度优化效果，</span><span class='green'>所有时间采样点中的最大峰值温度 TPMAX是最优，所有时间采样点峰值温度的平均值 TPAVG是比算法均值稍弱。</span><span class='green'>与四种DPTM源算法调度效果平均值相比，本文原型系统可以获得TPMAX1.81°C的改进，但TPAVG 有-1.31°C的退化。</span><span class='green'>从拉低最大峰值温度的角度来讲，改进效果较为明显。</span><span class='green'>3)通过图3.5与图3.6对本文原型系统的调度效果与理想值进行的直观比较，</span><span class='green'>看出本文原型系统可以获得比四种源算法均值更接近于理想值的优化效果。</span><span class='green'>与表3中理想值的 ETOTAL= EMAX= TPAVG= TPMAX参数相比，</span><span class='green'>四种 DPTM源算法调度效果平均值会产生28.64%/30.09%/7.71° C/9.73° C的差距，</span><span class='green'>而本文原型系统只产生了12.55%/13.93%/9.02° C/7.91° C差距。</span><span class='green'>3.4 本章总结第2章深入分析与评估了已有的主流调度算法，提出了一系列调度准则和经验。</span><span class='green'>基于这些对芯片工作休眠状态调度的经验准则，我们提出一种在能耗节省方面更具优势的 DPTM调度算法 VP- TALk，</span><span class='green'>以此算法为基础，综合本文所提出的预测任务负载模型，构建了一个基于负载预测的实时功耗温度管理系统。</span><span class='green'>本章中的仿真实验表明，1) 本文的组合模型在负载预测方面胜过众多的相关模型及算法，平均误差仅为2.89%；</span><span class='green'>2)本文所提出的 VP- TALk算法在较高的工作负载率和共同的峰值温度约束下，</span><span class='green'>分别183动态温度与功耗管理系统的模拟验证比 Pattern- Based、 M- Oscillating、 TALk分别节能20.54%、11.04%、11.42%；</span><span class='green'>3)本文所提出的综合四种源算法、基于机器学习的实时功耗温度管理原型系统较为接近理想值，</span><span class='green'>与其 ETOTAL= EMAX= TPAVG= TPMAX参数相比，只产生了12.55%/13.93%/9.02° C/7.91° C差距。</span>
</p>
</div>


<div>
<span style="margin-left:25px"></span>
[
<a class="pagelink" href="paper_1.htm">首页</a>
<a class="pagelink" href="paper_2.htm">上一页</a>
<a class="pagelink" href="paper_4.htm">下一页</a>
<a class="pagelink" href="paper_8.htm">尾页</a>
页码：3/8页
]
</div>

</div>

<div class="zhengwencenter">
<p>
检测报告由<a href="http://www.paperpass.com/" target="_blank">PaperPass</a>文献相似度检测系统生成
</p>
<p>
Copyright © 2007-2013 PaperPass
</p>
</div>
<div style="margin-bottom:400px"></div>
</body>
</html>
